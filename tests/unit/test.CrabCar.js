module( 'CrabCar' );

test( 'basic', function() {
  var collisionConfiguration = Bump.DefaultCollisionConfiguration.create();
  ok( collisionConfiguration instanceof Bump.DefaultCollisionConfiguration.prototype.constructor );

  var dispatcher = Bump.CollisionDispatcher.create( collisionConfiguration );
  ok( dispatcher instanceof Bump.CollisionDispatcher.prototype.constructor );

  var overlappingPairCache = Bump.DbvtBroadphase.create();
  ok( overlappingPairCache instanceof Bump.DbvtBroadphase.prototype.constructor );

  var solver = Bump.SequentialImpulseConstraintSolver.create();
  ok( solver instanceof Bump.SequentialImpulseConstraintSolver.prototype.constructor );

  var dynamicsWorld = Bump.DiscreteDynamicsWorld.create( dispatcher, overlappingPairCache, solver, collisionConfiguration );
  ok( dynamicsWorld instanceof Bump.DiscreteDynamicsWorld.prototype.constructor );

  //dynamicsWorld.setGravity( Bump.Vector3.create( 0.1, -10, -0.2 ) );
  dynamicsWorld.setGravity( Bump.Vector3.create( 0, -10, 0 ) );

  var groundShape = Bump.BoxShape.create( Bump.Vector3.create( 500, 500, 500 ) );
  ok( groundShape instanceof Bump.BoxShape.prototype.constructor );

  var collisionShapes = [ groundShape ];

  var groundTransform = Bump.Transform.create();
  ok( groundTransform instanceof Bump.Transform.prototype.constructor );
  groundTransform.setIdentity();
  groundTransform.setOrigin( Bump.Vector3.create( 0, -510, 0 ) );

  var mass = 0;
  var isDynamic = ( mass !== 0 );
  var localInertia = Bump.Vector3.create();

  if ( isDynamic ) {
    groundShape.calculateLocalInertia( mass, localInertia );
  }

  var myMotionState = Bump.DefaultMotionState.create( groundTransform );
  ok( myMotionState instanceof Bump.DefaultMotionState.prototype.constructor );

  var rbInfo = Bump.RigidBody.RigidBodyConstructionInfo.create( mass, myMotionState, groundShape, localInertia );
  ok( rbInfo instanceof Bump.RigidBody.RigidBodyConstructionInfo.prototype.constructor );

  var body = Bump.RigidBody.create( rbInfo );
  ok( body instanceof Bump.RigidBody.prototype.constructor );

  dynamicsWorld.addRigidBody( body );

  // create a dynamic rigidbody
  (function() {
    // block positions based on crab.json (exluding wheels)
    var blockPositions = [
      [ 3, 3, 5 ],
      [ 1, 3, 1 ],
      [ 1, 3, 2 ],
      [ 1, 3, 5 ],
      [ 1, 3, 6 ],
      [ 2, 3, 1 ],
      [ 2, 3, 2 ],
      [ 2, 3, 3 ],
      [ 2, 3, 4 ],
      [ 2, 3, 5 ],
      [ 2, 3, 6 ],
      [ 3, 3, 3 ],
      [ 3, 3, 4 ],
      [ 4, 3, 1 ],
      [ 4, 3, 2 ],
      [ 4, 3, 3 ],
      [ 4, 3, 4 ],
      [ 4, 3, 5 ],
      [ 4, 3, 6 ],
      [ 5, 3, 1 ],
      [ 5, 3, 2 ],
      [ 5, 3, 5 ],
      [ 5, 3, 6 ]
    ];
    var offset = Bump.Vector3.create( 3, 2, 3.5555555555555554 );

    var colShape = Bump.CompoundShape.create();
    ok( colShape instanceof Bump.CompoundShape.prototype.constructor );

    collisionShapes.push( colShape );

    var localOffset, localTrans, subShape;
    blockPositions.forEach( function( coords ) {
      localOffset = Bump.Vector3.create();
      localOffset.setValue.apply( localOffset, coords ).subtractSelf( offset );
      localTrans = Bump.Transform.getIdentity().setOrigin( localOffset );
      subShape = Bump.BoxShape.create( Bump.Vector3.create( 0.5, 0.5, 0.5 ) );
      collisionShapes.push( subShape );
      colShape.addChildShape( localTrans, subShape );
    });

    // var aShape = Bump.BoxShape.create( Bump.Vector3.create( 0.5, 0.5, 0.5 ) );
    // var bShape = Bump.BoxShape.create( Bump.Vector3.create( 0.5, 0.5, 0.5 ) );
    // collisionShapes.push( aShape );
    // collisionShapes.push( bShape );

    // var a = Bump.Transform.getIdentity();
    // var b = Bump.Transform.getIdentity();
    // a.setOrigin( Bump.Vector3.create( 0, 0, 0 ) );
    // b.setOrigin( Bump.Vector3.create( 0.75, 0.25, -0.5 ) );
    // colShape.addChildShape( a, aShape );
    // colShape.addChildShape( b, bShape );

    var startTransform = Bump.Transform.create();
    startTransform.setIdentity();

    mass = 80; //1;
    isDynamic = ( mass !== 0 );
    localInertia = Bump.Vector3.create();

    if ( isDynamic ) {
      colShape.calculateLocalInertia( mass, localInertia );
    }

    //startTransform.setOrigin( Bump.Vector3.create( -3, 10, 0 ) );

    // using motionstate is recommended, it provides interpolation capabilities, and only synchronizes 'active' objects
    myMotionState = Bump.DefaultMotionState.create( startTransform );
    rbInfo = Bump.RigidBody.RigidBodyConstructionInfo.create( mass, myMotionState, colShape, localInertia );
    body = Bump.RigidBody.create( rbInfo );

    body.setContactProcessingThreshold( Infinity );
    body.setActivationState( Bump.CollisionObject.DISABLE_DEACTIVATION );

    dynamicsWorld.addRigidBody(body);
  })();

  /// Do some simulation
  var trans = Bump.Transform.create();

  var checkOrigin = function( expected ) {
    return epsilonNumberCheck( trans.origin, expected, epsilon, shapeName + ': Frame ' + i );
  };

  var checkBasis = function( expected ) {
    return epsilonNumberCheck( trans.basis, expected, epsilon, shapeName + ': Frame ' + i );
  };

  for( var i = 0; i < 1000 /* 32 */; i++ ) {
    dynamicsWorld.stepSimulation( 0.05, 0 );

    var epsilon = Math.pow( 2, -52 );
    var shapeName = 'BoxShape';

    // Get CompoundShape transform
    // dynamicsWorld.getCollisionObjectArray()[ 1 ].getMotionState().getWorldTransform( trans );
    trans = dynamicsWorld.getCollisionObjectArray()[ 1 ].getCenterOfMassTransform();

    epsilon = Math.pow( 2, -52 );
    shapeName = 'CompoundShape';
    switch ( i ) {
    case   0:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.02500000000000000833,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   1:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.07500000000000002498,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   2:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.15000000000000004996,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   3:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.25000000000000011102,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   4:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.37500000000000011102,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   5:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.52500000000000013323,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   6:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.70000000000000017764,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   7:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -0.90000000000000024425,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   8:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -1.12500000000000022204,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case   9:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -1.37500000000000022204,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  10:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -1.65000000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  11:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -1.95000000000000039968,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  12:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -2.27500000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  13:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -2.62500000000000044409,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  14:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -3.00000000000000044409,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  15:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -3.40000000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  16:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -3.82500000000000062172,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  17:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -4.27500000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  18:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -4.75000000000000000000,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  19:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -5.25000000000000000000,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  20:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -5.77500000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  21:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -6.32500000000000017764,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  22:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -6.90000000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  23:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -7.50000000000000000000,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  24:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -8.12500000000000000000,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  25:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -8.77500000000000035527,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  26:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -9.45000000000000106581,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  27:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -10.15000000000000213163,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  28:
      checkOrigin( Bump.Vector3.create(  0.00000000000000000000, -10.87500000000000177636,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000,  0.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  1.00000000000000000000,  0.00000000000000000000,
                                           0.00000000000000000000,  0.00000000000000000000,  1.00000000000000000000  ) );
      break;
    case  29:
      checkOrigin( Bump.Vector3.create(  0.00000000245838582417, -10.79999999382947706295,  0.00000000000000000000 ) );
      checkBasis( Bump.Matrix3x3.create(   0.99999999999999988898, -0.00000001164088909173, -0.00000000110031013821,
                                           0.00000001164088909380,  0.99999999999999988898,  0.00000000187919057415,
                                           0.00000000110031011633, -0.00000000187919058696,  1.00000000000000000000  ) );
      break;
    case  30:
      checkOrigin( Bump.Vector3.create(  0.00000000136877731625, -10.73999999506357738710, -0.00000000017911586330 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000929653912646, -0.00000000109652645109,
                                           0.00000000929653912811,  1.00000000000000000000,  0.00000000150204078202,
                                           0.00000000109652643712, -0.00000000150204079222,  1.00000000000000000000  ) );
      break;
    case  31:
      checkOrigin( Bump.Vector3.create(  0.00000000047786252432, -10.69199999595363159699, -0.00000000035823172659 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000762066457052, -0.00000000111386453406,
                                           0.00000000762066457189,  1.00000000000000000000,  0.00000000123124357641,
                                           0.00000000111386452468, -0.00000000123124358490,  1.00000000000000000000  ) );
      break;
    case  32:
      checkOrigin( Bump.Vector3.create( -0.00000000023831378135, -10.65359999664772061578, -0.00000000053734758989 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000631382824683, -0.00000000113440355496,
                                           0.00000000631382824799,  1.00000000000000000000,  0.00000000102007437572,
                                           0.00000000113440354852, -0.00000000102007438288,  1.00000000000000000000  ) );
      break;
    case  33:
      checkOrigin( Bump.Vector3.create( -0.00000000081808544652, -10.62287999718863318321, -0.00000000071646345318 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000529545094856, -0.00000000115750344596,
                                           0.00000000529545094955,  1.00000000000000000000,  0.00000000085550853623,
                                           0.00000000115750344143, -0.00000000085550854236,  1.00000000000000000000  ) );
      break;
    case  34:
      checkOrigin( Bump.Vector3.create( -0.00000000129144129079, -10.59830399760987518221, -0.00000000089557931648 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000450242173019, -0.00000000118265148317,
                                           0.00000000450242173105,  1.00000000000000000000,  0.00000000072735758374,
                                           0.00000000118265147989, -0.00000000072735758907,  1.00000000000000000000  ) );
      break;
    case  35:
      checkOrigin( Bump.Vector3.create( -0.00000000168183506446, -10.57864319793767649003, -0.00000000107469517977 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000388533507992, -0.00000000120943890047,
                                           0.00000000388533508068,  1.00000000000000000000,  0.00000000062763582961,
                                           0.00000000120943889803, -0.00000000062763583431,  1.00000000000000000000  ) );
      break;
    case  36:
      checkOrigin( Bump.Vector3.create( -0.00000000200759058704, -10.56291455819256519533, -0.00000000125381104307 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000340553752563, -0.00000000123753747023,
                                           0.00000000340553752631,  1.00000000000000000000,  0.00000000055009424773,
                                           0.00000000123753746835, -0.00000000055009425194,  1.00000000000000000000  ) );
      break;
    case  37:
      checkOrigin( Bump.Vector3.create( -0.00000000228302018789, -10.55033164639060139223, -0.00000000143292690637 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000303279850915, -0.00000000126668440863,
                                           0.00000000303279850977,  1.00000000000000000000,  0.00000000048985185534,
                                           0.00000000126668440714, -0.00000000048985185918,  1.00000000000000000000  ) );
      break;
    case  38:
      checkOrigin( Bump.Vector3.create( -0.00000000251930374463, -10.54026531694431945141, -0.00000000161204276966 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000274348248137, -0.00000000129667094925,
                                           0.00000000274348248194,  1.00000000000000000000,  0.00000000044309238798,
                                           0.00000000129667094803, -0.00000000044309239154,  1.00000000000000000000  ) );
      break;
    case  39:
      checkOrigin( Bump.Vector3.create( -0.00000000272515441211, -10.53221225338352340373, -0.00000000179115863296 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000251913350221, -0.00000000132732860700,
                                           0.00000000251913350275,  1.00000000000000000000,  0.00000000040683636400,
                                           0.00000000132732860598, -0.00000000040683636734,  1.00000000000000000000  ) );
      break;
    case  40:
      checkOrigin( Bump.Vector3.create( -0.00000000290737288098, -10.52576980253187954872, -0.00000000197027449625 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000234533250603, -0.00000000135852357893,
                                           0.00000000234533250655,  1.00000000000000000000,  0.00000000037874471720,
                                           0.00000000135852357805, -0.00000000037874472039,  1.00000000000000000000  ) );
      break;
    case  41:
      checkOrigin( Bump.Vector3.create( -0.00000000307124979337, -10.52061584184814968523, -0.00000000214939035955 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000221083833815, -0.00000000139014788620,
                                           0.00000000221083833865,  1.00000000000000000000,  0.00000000035701036996,
                                           0.00000000139014788541, -0.00000000035701037303,  1.00000000000000000000  ) );
      break;
    case  42:
      checkOrigin( Bump.Vector3.create( -0.00000000322090950118, -10.51649267329923631564, -0.00000000232850622284 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000210687851792, -0.00000000142211581984,
                                           0.00000000210687851840,  1.00000000000000000000,  0.00000000034021005530,
                                           0.00000000142211581913, -0.00000000034021005829,  1.00000000000000000000  ) );
      break;
    case  43:
      checkOrigin( Bump.Vector3.create( -0.00000000335955653038, -10.51319413845857653200, -0.00000000250762208614 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000202662323054, -0.00000000145435852773,
                                           0.00000000202662323102,  1.00000000000000000000,  0.00000000032723113881,
                                           0.00000000145435852707, -0.00000000032723114176,  1.00000000000000000000  ) );
      break;
    case  44:
      checkOrigin( Bump.Vector3.create( -0.00000000348968695964, -10.51055531058480951856, -0.00000000268673794944 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000196474573343, -0.00000000148682125953,
                                           0.00000000196474573390,  1.00000000000000000000,  0.00000000031722983961,
                                           0.00000000148682125891, -0.00000000031722984253,  1.00000000000000000000  ) );
      break;
    case  45:
      checkOrigin( Bump.Vector3.create( -0.00000000361323736376, -10.50844424828480860867, -0.00000000286585381273 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000191710417071, -0.00000000151946004512,
                                           0.00000000191710417118,  1.00000000000000000000,  0.00000000030952921696,
                                           0.00000000151946004453, -0.00000000030952921988,  1.00000000000000000000  ) );
      break;
    case  46:
      checkOrigin( Bump.Vector3.create( -0.00000000373170886287, -10.50675539844402450740, -0.00000000304496967603 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000188048047134, -0.00000000155223956674,
                                           0.00000000188048047181,  1.00000000000000000000,  0.00000000030360504640,
                                           0.00000000155223956617, -0.00000000030360504932,  1.00000000000000000000  ) );
      break;
    case  47:
      checkOrigin( Bump.Vector3.create( -0.00000000384626781266, -10.50540431857076306699, -0.00000000322408553932 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000185237211664, -0.00000000158513203772,
                                           0.00000000185237211711,  1.00000000000000000000,  0.00000000029905852149,
                                           0.00000000158513203716, -0.00000000029905852443,  1.00000000000000000000  ) );
      break;
    case  48:
      checkOrigin( Bump.Vector3.create( -0.00000000395781582837, -10.50432345467164374497, -0.00000000340320140262 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000183083689230, -0.00000000161811471525,
                                           0.00000000183083689278,  1.00000000000000000000,  0.00000000029557380479,
                                           0.00000000161811471471, -0.00000000029557380775,  1.00000000000000000000  ) );
      break;
    case  49:
      checkOrigin( Bump.Vector3.create( -0.00000000406704580316, -10.50345876355195073870, -0.00000000358231726591 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000181437572729, -0.00000000165116906184,
                                           0.00000000181437572777,  1.00000000000000000000,  0.00000000029291012554,
                                           0.00000000165116906131, -0.00000000029291012854,  1.00000000000000000000  ) );
      break;
    case  50:
      checkOrigin( Bump.Vector3.create( -0.00000000417450026401, -10.50276701065586948403, -0.00000000376143312921 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000180181562995, -0.00000000168428068767,
                                           0.00000000180181563044,  1.00000000000000000000,  0.00000000029088222848,
                                           0.00000000168428068714, -0.00000000029088223151,  1.00000000000000000000  ) );
      break;
    case  51:
      checkOrigin( Bump.Vector3.create( -0.00000000428059760227, -10.50221360833874761909, -0.00000000394054899250 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000179225476602, -0.00000000171743894794,
                                           0.00000000179225476651,  1.00000000000000000000,  0.00000000028933290525,
                                           0.00000000171743894742, -0.00000000028933290833,  1.00000000000000000000  ) );
      break;
    case  52:
      checkOrigin( Bump.Vector3.create( -0.00000000438565744708, -10.50177088648483980649, -0.00000000411966485580 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000178499474013, -0.00000000175063416568,
                                           0.00000000178499474064,  1.00000000000000000000,  0.00000000028815952057,
                                           0.00000000175063416516, -0.00000000028815952370,  1.00000000000000000000  ) );
      break;
    case  53:
      checkOrigin( Bump.Vector3.create( -0.00000000448992483520, -10.50141670900155332902, -0.00000000429878071910 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000177949984518, -0.00000000178385887356,
                                           0.00000000177949984570,  1.00000000000000000000,  0.00000000028726797949,
                                           0.00000000178385887305, -0.00000000028726798267,  1.00000000000000000000  ) );
      break;
    case  54:
      checkOrigin( Bump.Vector3.create( -0.00000000459359215379, -10.50113336701478594648, -0.00000000447789658239 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000177535016801, -0.00000000181710732161,
                                           0.00000000177535016853,  1.00000000000000000000,  0.00000000028659774401,
                                           0.00000000181710732110, -0.00000000028659774723,  1.00000000000000000000  ) );
      break;
    case  55:
      checkOrigin( Bump.Vector3.create( -0.00000000469679891727, -10.50090669342526794594, -0.00000000465701244569 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000177223547822, -0.00000000185037440410,
                                           0.00000000177223547875,  1.00000000000000000000,  0.00000000028609356397,
                                           0.00000000185037440359, -0.00000000028609356725,  1.00000000000000000000  ) );
      break;
    case  56:
      checkOrigin( Bump.Vector3.create( -0.00000000479966258510, -10.50072535455356792511, -0.00000000483612830898 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176990088075, -0.00000000188365685221,
                                           0.00000000176990088129,  1.00000000000000000000,  0.00000000028571335730,
                                           0.00000000188365685171, -0.00000000028571336063,  1.00000000000000000000  ) );
      break;
    case  57:
      checkOrigin( Bump.Vector3.create( -0.00000000490226246181, -10.50058028345613969634, -0.00000000501524417228 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176816546562, -0.00000000191695101671,
                                           0.00000000176816546617,  1.00000000000000000000,  0.00000000028543412891,
                                           0.00000000191695101621, -0.00000000028543413230,  1.00000000000000000000  ) );
      break;
    case  58:
      checkOrigin( Bump.Vector3.create( -0.00000000500466885726, -10.50046422657814382262, -0.00000000519436003557 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176687794235, -0.00000000195025515146,
                                           0.00000000176687794291,  1.00000000000000000000,  0.00000000028522465072,
                                           0.00000000195025515096, -0.00000000028522465416,  1.00000000000000000000  ) );
      break;
    case  59:
      checkOrigin( Bump.Vector3.create( -0.00000000510693103436, -10.50037138107570378054, -0.00000000537347589887 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176592702767, -0.00000000198356716889,
                                           0.00000000176592702823,  1.00000000000000000000,  0.00000000028507163845,
                                           0.00000000198356716839, -0.00000000028507164196,  1.00000000000000000000  ) );
      break;
    case  60:
      checkOrigin( Bump.Vector3.create( -0.00000000520908105872, -10.50029710467372190408, -0.00000000555259176217 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176523521398, -0.00000000201688488013,
                                           0.00000000176523521455,  1.00000000000000000000,  0.00000000028495796476,
                                           0.00000000201688487963, -0.00000000028495796832,  1.00000000000000000000  ) );
      break;
    case  61:
      checkOrigin( Bump.Vector3.create( -0.00000000531115276433, -10.50023768355210762593, -0.00000000573170762546 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176473187104, -0.00000000205020780045,
                                           0.00000000176473187162,  1.00000000000000000000,  0.00000000028487378250,
                                           0.00000000205020779995, -0.00000000028487378612,  1.00000000000000000000  ) );
      break;
    case  62:
      checkOrigin( Bump.Vector3.create( -0.00000000541316649096, -10.50019014665478778170, -0.00000000591082348876 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176437011165, -0.00000000208353491405,
                                           0.00000000176437011224,  1.00000000000000000000,  0.00000000028481499137,
                                           0.00000000208353491354, -0.00000000028481499505,  1.00000000000000000000  ) );
      break;
    case  63:
      checkOrigin( Bump.Vector3.create( -0.00000000551513747564, -10.50015211713690810313, -0.00000000608993935205 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176411223831, -0.00000000211686503891,
                                           0.00000000176411223891,  1.00000000000000000000,  0.00000000028477838555,
                                           0.00000000211686503840, -0.00000000028477838928,  1.00000000000000000000  ) );
      break;
    case  64:
      checkOrigin( Bump.Vector3.create( -0.00000000561707318371, -10.50012169352259938648, -0.00000000626905521535 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176393925868, -0.00000000215019751039,
                                           0.00000000176393925929,  1.00000000000000000000,  0.00000000028475018483,
                                           0.00000000215019750989, -0.00000000028475018862,  1.00000000000000000000  ) );
      break;
    case  65:
      checkOrigin( Bump.Vector3.create( -0.00000000571899030768, -10.50009735463113891285, -0.00000000644817107864 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176381835027, -0.00000000218353242056,
                                           0.00000000176381835089,  1.00000000000000000000,  0.00000000028472878722,
                                           0.00000000218353242006, -0.00000000028472879107,  1.00000000000000000000  ) );
      break;
    case  66:
      checkOrigin( Bump.Vector3.create( -0.00000000582089222916, -10.50007788351796378379, -0.00000000662728694194 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176373809710, -0.00000000221686900804,
                                           0.00000000176373809773,  1.00000000000000000000,  0.00000000028471512997,
                                           0.00000000221686900753, -0.00000000028471513388,  1.00000000000000000000  ) );
      break;
    case  67:
      checkOrigin( Bump.Vector3.create( -0.00000000592278127754, -10.50006230662741124604, -0.00000000680640280524 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176368961826, -0.00000000225020658194,
                                           0.00000000176368961890,  1.00000000000000000000,  0.00000000028471078969,
                                           0.00000000225020658144, -0.00000000028471079366,  1.00000000000000000000  ) );
      break;
    case  68:
      checkOrigin( Bump.Vector3.create( -0.00000000602466504397, -10.50004984511495642607, -0.00000000698551866853 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176365865157, -0.00000000228354529283,
                                           0.00000000176365865222,  1.00000000000000000000,  0.00000000028470974979,
                                           0.00000000228354529233, -0.00000000028470975382,  1.00000000000000000000  ) );
      break;
    case  69:
      checkOrigin( Bump.Vector3.create( -0.00000000612654044168, -10.50003987590499399118, -0.00000000716463453183 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364668332, -0.00000000231688437370,
                                           0.00000000176364668398,  1.00000000000000000000,  0.00000000028471106239,
                                           0.00000000231688437320, -0.00000000028471106647,  1.00000000000000000000  ) );
      break;
    case  70:
      checkOrigin( Bump.Vector3.create( -0.00000000622841297371, -10.50003190053702084583, -0.00000000734375039512 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364614647, -0.00000000235022438731,
                                           0.00000000176364614714,  1.00000000000000000000,  0.00000000028471196561,
                                           0.00000000235022438681, -0.00000000028471196976,  1.00000000000000000000  ) );
      break;
    case  71:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  72:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  73:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  74:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  75:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  76:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  77:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  78:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  79:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  80:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  81:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  82:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  83:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  84:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  85:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  86:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  87:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  88:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  89:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  90:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  91:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  92:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  93:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  94:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  95:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  96:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  97:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  98:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case  99:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;
    case 100:
      checkOrigin( Bump.Vector3.create( -0.00000000633028533864, -10.50002552024264268482, -0.00000000752286625842 ) );
      checkBasis( Bump.Matrix3x3.create(   1.00000000000000000000, -0.00000000176364875123, -0.00000000238356486031,
                                           0.00000000176364875191,  1.00000000000000000000,  0.00000000028471344170,
                                           0.00000000238356485981, -0.00000000028471344591,  1.00000000000000000000  ) );
      break;

    // // Print positions of all objects
    // for( var j = dynamicsWorld.getNumCollisionObjects() - 1; j >= 0; j-- ) {
    //   var obj = dynamicsWorld.getCollisionObjectArray()[ j ];
    //   body = Bump.RigidBody.upcast( obj );
    //   if( body && body.getMotionState() ) {
    //     body.getMotionState().getWorldTransform( trans );

    //     var precision = 20;
    //     console.log( 'world pos = ' + trans.getOrigin().x.toFixed( precision ) + ' ' +
    //                  trans.getOrigin().y.toFixed( precision ) + ' ' +
    //                  trans.getOrigin().z.toFixed( precision ) );
    //   }
    // }
    }
  }

  // console.log( 'final origin :', trans.origin );

  strictEqual( dynamicsWorld.getNumCollisionObjects(), 2 );
  dynamicsWorld.getCollisionObjectArray()[0].getMotionState().getWorldTransform( trans );
  deepEqual( trans.origin, Bump.Vector3.create( 0, -510, 0 ) );

  ok( true, 'finish' );

});
